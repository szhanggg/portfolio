---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Check out my webiste!" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="author" href="humans.txt" />
    <title>{title}</title>
  </head>
  <body
    class="text-black bg-white dark:text-white dark:bg-darkbg overflow-x-hidden"
  >
    <slot />
  </body>
</html>

<style is:global>
  :root {
    --primary: #0ea4e8;
    --secondary: #f573b6;
    --tertiary: #6267f1;
    --darkbg: #0a1121;
    --text: #94a3b8;
    --cursor-size: 40px;

    cursor: none;
  }

  p {
    color: var(--text);
  }

  @font-face {
    font-family: "Gotham";
    src: url("/fonts/GothamMedium.ttf");
    font-weight: normal;
    font-style: normal;
  }

  @font-face {
    font-family: "Gotham";
    src: url("/fonts/GothamBold.ttf");
    font-weight: bold;
    font-style: normal;
  }

  @font-face {
    font-family: "SF Pro";
    src: url("/fonts/SFPRODISPLAYBOLD.OTF");
    font-weight: bold;
    font-style: normal;
  }

  @font-face {
    font-family: "SF Pro";
    src: url("/fonts/SFPRODISPLAYREGULAR.OTF");
    font-weight: normal;
    font-style: normal;
  }

  html.lenis {
    height: auto;
  }

  .lenis.lenis-smooth {
    scroll-behavior: auto;
  }

  .lenis.lenis-smooth [data-lenis-prevent] {
    overscroll-behavior: contain;
  }

  .lenis.lenis-stopped {
    overflow: hidden;
  }

  .lenis.lenis-scrolling iframe {
    pointer-events: none;
  }
</style>

<script>
  import Lenis from "@studio-freight/lenis";
  import gsap from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  var lenis;
  if (window.innerWidth > 768) {
    lenis = new Lenis();

    function raf(time) {
      lenis.raf(time);
      requestAnimationFrame(raf);
    }

    requestAnimationFrame(raf);
  }

  gsap.registerPlugin(ScrollTrigger);

  var t1 = gsap.timeline();

  t1.set("#fp-name", { visibility: "hidden" });
  t1.set("#fp-sub", { visibility: "hidden" });
  t1.from(
    "#timeline",
    {
      height: 0,
      duration: 3,
      ease: "ease-in",
    },
    ">"
  );
  t1.from(
    "#start",
    {
      x: "-100",
      duration: 0.5,
    },
    "<+1"
  );
  t1.set("#fp-name", { visibility: "visible" }, "<0.3");
  t1.set("#fp-sub", { visibility: "visible" }, "<0.3");

  t1.from(
    "#fp-name",
    {
      x: "-150%",
      duration: 1,
    },
    "<"
  );
  t1.from(
    "#fp-sub",
    {
      x: "-110%",
      duration: 1,
    },
    "<0.5"
  );

  const projects = ["mchackathon", "onlyblair"];

  projects.forEach((project) => {
    gsap.from("#" + project, {
      x: "-200%",
      duration: 1,
      scrollTrigger: {
        trigger: "#" + project,
        start: "top 80%",
        end: "bottom 80%",
        scrub: 1,
      },
    });
  });

  gsap.from("#about-header", {
    x: "-100%",
    duration: 0.5,
    scrollTrigger: {
      trigger: "#about-header",
      start: "top 90%",
      end: "bottom 75%",
      scrub: true,
    },
  });

  for (const x of [...Array(3).keys()]) {
    gsap.from("#about-text" + (x + 1), {
      x: "-100%",
      duration: 0.5,
      scrollTrigger: {
        trigger: "#about-text" + (x + 1),
        start: "top 90%",
        end: "bottom 75%",
        scrub: true,
      },
    });
  }

  var navlinks = document.getElementsByClassName("navlink");
  var done = [];

  for (let navlink of Array.from(navlinks)) {
    navlink.addEventListener("click", (e) => {
      let target = navlink.getAttribute("href");
      e.preventDefault();
      if (window.innerWidth > 768) {
        lenis.scrollTo(target);
      } else {
        document.getElementById(target.substring(1)).scrollIntoView();
      }
    });
    let target = navlink.getAttribute("href");
    if (target == "#start") continue;
    if (done.includes(target)) continue;
    done.push(target);

    document
      .getElementById(target.substring(1))
      .classList.add("will-change-transform");

    gsap.from(target, {
      x: -100,
      duration: 0.5,
      scrollTrigger: {
        trigger: target,
        start: "top 90%",
        end: "bottom 80%",
        scrub: true,
      },
    });
  }

  var atags = document.getElementsByTagName("a");

  for (let atag of Array.from(atags)) {
    atag.style.cursor = "none";
    atag.addEventListener("mouseenter", () => {
      gsap.to("html", { "--cursor-size": "80px", duration: 0.2 });
    });
    atag.addEventListener("mouseleave", () => {
      gsap.to("html", { "--cursor-size": "40px", duration: 0.2 });
    });
  }
</script>
